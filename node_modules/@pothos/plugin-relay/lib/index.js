"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    PothosRelayPlugin: function() {
        return PothosRelayPlugin;
    },
    default: function() {
        return _default;
    }
});
require("./global-types");
require("./field-builder");
require("./input-field-builder");
require("./schema-builder");
const _core = /*#__PURE__*/ _interop_require_wildcard(require("@pothos/core"));
const _internal = require("./utils/internal");
_export_star(require("./node-ref"), exports);
_export_star(require("./types"), exports);
_export_star(require("./utils"), exports);
function _export_star(from, to) {
    Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
            Object.defineProperty(to, k, {
                enumerable: true,
                get: function() {
                    return from[k];
                }
            });
        }
    });
    return from;
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const pluginName = 'relay';
const _default = pluginName;
class PothosRelayPlugin extends _core.BasePlugin {
    wrapResolve(resolver, fieldConfig) {
        const argMappings = (0, _core.mapInputFields)(fieldConfig.args, this.buildCache, (inputField)=>{
            var _inputField_extensions;
            if ((_inputField_extensions = inputField.extensions) === null || _inputField_extensions === void 0 ? void 0 : _inputField_extensions.isRelayGlobalID) {
                var _inputField_extensions1, _inputField_extensions2;
                var _inputField_extensions_relayGlobalIDFor, _ref;
                return (_ref = (_inputField_extensions_relayGlobalIDFor = (_inputField_extensions1 = inputField.extensions) === null || _inputField_extensions1 === void 0 ? void 0 : _inputField_extensions1.relayGlobalIDFor) !== null && _inputField_extensions_relayGlobalIDFor !== void 0 ? _inputField_extensions_relayGlobalIDFor : (_inputField_extensions2 = inputField.extensions) === null || _inputField_extensions2 === void 0 ? void 0 : _inputField_extensions2.relayGlobalIDAlwaysParse) !== null && _ref !== void 0 ? _ref : false;
            }
            return null;
        });
        if (!argMappings) {
            return resolver;
        }
        const argMapper = (0, _core.createInputValueMapper)(argMappings, (globalID, mappings, ctx, info)=>{
            var _mappings_value;
            return (0, _internal.internalDecodeGlobalID)(this.builder, String(globalID), ctx, info, (_mappings_value = mappings.value) !== null && _mappings_value !== void 0 ? _mappings_value : false);
        });
        return (parent, args, context, info)=>resolver(parent, argMapper(args, undefined, context, info), context, info);
    }
    wrapSubscribe(subscribe, fieldConfig) {
        const argMappings = (0, _core.mapInputFields)(fieldConfig.args, this.buildCache, (inputField)=>{
            var _inputField_extensions;
            if ((_inputField_extensions = inputField.extensions) === null || _inputField_extensions === void 0 ? void 0 : _inputField_extensions.isRelayGlobalID) {
                var _inputField_extensions1;
                var _inputField_extensions_relayGlobalIDFor;
                return (_inputField_extensions_relayGlobalIDFor = (_inputField_extensions1 = inputField.extensions) === null || _inputField_extensions1 === void 0 ? void 0 : _inputField_extensions1.relayGlobalIDFor) !== null && _inputField_extensions_relayGlobalIDFor !== void 0 ? _inputField_extensions_relayGlobalIDFor : true;
            }
            return null;
        });
        if (!argMappings || !subscribe) {
            return subscribe;
        }
        const argMapper = (0, _core.createInputValueMapper)(argMappings, (globalID, mappings, ctx, info)=>(0, _internal.internalDecodeGlobalID)(this.builder, String(globalID), ctx, info, Array.isArray(mappings.value) ? mappings.value : false));
        return (parent, args, context, info)=>subscribe(parent, argMapper(args, undefined, context, info), context, info);
    }
}
_core.default.registerPlugin(pluginName, PothosRelayPlugin);

//# sourceMappingURL=index.js.map